// Code generated by protoc-gen-go. DO NOT EDIT.
// source: opts/ps_opts_streamdal.proto

package opts

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type StreamdalOutputType int32

const (
	StreamdalOutputType_TABLE StreamdalOutputType = 0
	StreamdalOutputType_JSON  StreamdalOutputType = 1
)

var StreamdalOutputType_name = map[int32]string{
	0: "TABLE",
	1: "JSON",
}

var StreamdalOutputType_value = map[string]int32{
	"TABLE": 0,
	"JSON":  1,
}

func (x StreamdalOutputType) String() string {
	return proto.EnumName(StreamdalOutputType_name, int32(x))
}

func (StreamdalOutputType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_49b11ca9129ce8de, []int{0}
}

type StreamdalReplayType int32

const (
	StreamdalReplayType_SINGLE     StreamdalReplayType = 0
	StreamdalReplayType_CONTINUOUS StreamdalReplayType = 1
)

var StreamdalReplayType_name = map[int32]string{
	0: "SINGLE",
	1: "CONTINUOUS",
}

var StreamdalReplayType_value = map[string]int32{
	"SINGLE":     0,
	"CONTINUOUS": 1,
}

func (x StreamdalReplayType) String() string {
	return proto.EnumName(StreamdalReplayType_name, int32(x))
}

func (StreamdalReplayType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_49b11ca9129ce8de, []int{1}
}

type StreamdalOptions struct {
	// @gotags: kong:"help='How to output results (options: table json)',default=table,type=pbenum,pbenum_lowercase"
	OutputType StreamdalOutputType `protobuf:"varint,1,opt,name=output_type,json=outputType,proto3,enum=protos.opts.StreamdalOutputType" json:"output_type,omitempty" kong:"help='How to output results (options: table json)',default=table,type=pbenum,pbenum_lowercase"`
	// @gotags: kong:"help='Alternative URL to use for Streamdal API',default='https://api.streamdal.com'"
	ApiUrl string `protobuf:"bytes,2,opt,name=api_url,json=apiUrl,proto3" json:"api_url,omitempty" kong:"help='Alternative URL to use for Streamdal API',default='https://api.streamdal.com'"`
	// @gotags: kong:"cmd,help='Login to the Streamdal platform'"
	Login *StreamdalLoginOptions `protobuf:"bytes,3,opt,name=login,proto3" json:"login,omitempty" kong:"cmd,help='Login to the Streamdal platform'"`
	// @gotags: kong:"cmd,help='Login to Streamdal'"
	Logout *StreamdalLogoutOptions `protobuf:"bytes,4,opt,name=logout,proto3" json:"logout,omitempty" kong:"cmd,help='Login to Streamdal'"`
	// @gotags: kong:"cmd,help='List Streamdal resources'"
	List *StreamdalListOptions `protobuf:"bytes,5,opt,name=list,proto3" json:"list,omitempty" kong:"cmd,help='List Streamdal resources'"`
	// @gotags: kong:"cmd,help='Create operations'"
	Create *StreamdalCreateOptions `protobuf:"bytes,6,opt,name=create,proto3" json:"create,omitempty" kong:"cmd,help='Create operations'"`
	// @gotags: kong:"cmd,help='Search operations'"
	Search *StreamdalSearchOptions `protobuf:"bytes,7,opt,name=search,proto3" json:"search,omitempty" kong:"cmd,help='Search operations'"`
	// @gotags: kong:"cmd,help='Archive a resource'"
	Archive              *StreamdalArchiveOptions `protobuf:"bytes,8,opt,name=archive,proto3" json:"archive,omitempty" kong:"cmd,help='Archive a resource'"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *StreamdalOptions) Reset()         { *m = StreamdalOptions{} }
func (m *StreamdalOptions) String() string { return proto.CompactTextString(m) }
func (*StreamdalOptions) ProtoMessage()    {}
func (*StreamdalOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_49b11ca9129ce8de, []int{0}
}

func (m *StreamdalOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamdalOptions.Unmarshal(m, b)
}
func (m *StreamdalOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamdalOptions.Marshal(b, m, deterministic)
}
func (m *StreamdalOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamdalOptions.Merge(m, src)
}
func (m *StreamdalOptions) XXX_Size() int {
	return xxx_messageInfo_StreamdalOptions.Size(m)
}
func (m *StreamdalOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamdalOptions.DiscardUnknown(m)
}

var xxx_messageInfo_StreamdalOptions proto.InternalMessageInfo

func (m *StreamdalOptions) GetOutputType() StreamdalOutputType {
	if m != nil {
		return m.OutputType
	}
	return StreamdalOutputType_TABLE
}

func (m *StreamdalOptions) GetApiUrl() string {
	if m != nil {
		return m.ApiUrl
	}
	return ""
}

func (m *StreamdalOptions) GetLogin() *StreamdalLoginOptions {
	if m != nil {
		return m.Login
	}
	return nil
}

func (m *StreamdalOptions) GetLogout() *StreamdalLogoutOptions {
	if m != nil {
		return m.Logout
	}
	return nil
}

func (m *StreamdalOptions) GetList() *StreamdalListOptions {
	if m != nil {
		return m.List
	}
	return nil
}

func (m *StreamdalOptions) GetCreate() *StreamdalCreateOptions {
	if m != nil {
		return m.Create
	}
	return nil
}

func (m *StreamdalOptions) GetSearch() *StreamdalSearchOptions {
	if m != nil {
		return m.Search
	}
	return nil
}

func (m *StreamdalOptions) GetArchive() *StreamdalArchiveOptions {
	if m != nil {
		return m.Archive
	}
	return nil
}

type StreamdalLoginOptions struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StreamdalLoginOptions) Reset()         { *m = StreamdalLoginOptions{} }
func (m *StreamdalLoginOptions) String() string { return proto.CompactTextString(m) }
func (*StreamdalLoginOptions) ProtoMessage()    {}
func (*StreamdalLoginOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_49b11ca9129ce8de, []int{1}
}

func (m *StreamdalLoginOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamdalLoginOptions.Unmarshal(m, b)
}
func (m *StreamdalLoginOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamdalLoginOptions.Marshal(b, m, deterministic)
}
func (m *StreamdalLoginOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamdalLoginOptions.Merge(m, src)
}
func (m *StreamdalLoginOptions) XXX_Size() int {
	return xxx_messageInfo_StreamdalLoginOptions.Size(m)
}
func (m *StreamdalLoginOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamdalLoginOptions.DiscardUnknown(m)
}

var xxx_messageInfo_StreamdalLoginOptions proto.InternalMessageInfo

type StreamdalLogoutOptions struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StreamdalLogoutOptions) Reset()         { *m = StreamdalLogoutOptions{} }
func (m *StreamdalLogoutOptions) String() string { return proto.CompactTextString(m) }
func (*StreamdalLogoutOptions) ProtoMessage()    {}
func (*StreamdalLogoutOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_49b11ca9129ce8de, []int{2}
}

func (m *StreamdalLogoutOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamdalLogoutOptions.Unmarshal(m, b)
}
func (m *StreamdalLogoutOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamdalLogoutOptions.Marshal(b, m, deterministic)
}
func (m *StreamdalLogoutOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamdalLogoutOptions.Merge(m, src)
}
func (m *StreamdalLogoutOptions) XXX_Size() int {
	return xxx_messageInfo_StreamdalLogoutOptions.Size(m)
}
func (m *StreamdalLogoutOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamdalLogoutOptions.DiscardUnknown(m)
}

var xxx_messageInfo_StreamdalLogoutOptions proto.InternalMessageInfo

type StreamdalListCollectionOptions struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StreamdalListCollectionOptions) Reset()         { *m = StreamdalListCollectionOptions{} }
func (m *StreamdalListCollectionOptions) String() string { return proto.CompactTextString(m) }
func (*StreamdalListCollectionOptions) ProtoMessage()    {}
func (*StreamdalListCollectionOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_49b11ca9129ce8de, []int{3}
}

func (m *StreamdalListCollectionOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamdalListCollectionOptions.Unmarshal(m, b)
}
func (m *StreamdalListCollectionOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamdalListCollectionOptions.Marshal(b, m, deterministic)
}
func (m *StreamdalListCollectionOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamdalListCollectionOptions.Merge(m, src)
}
func (m *StreamdalListCollectionOptions) XXX_Size() int {
	return xxx_messageInfo_StreamdalListCollectionOptions.Size(m)
}
func (m *StreamdalListCollectionOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamdalListCollectionOptions.DiscardUnknown(m)
}

var xxx_messageInfo_StreamdalListCollectionOptions proto.InternalMessageInfo

type StreamdalListDestinationOptions struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StreamdalListDestinationOptions) Reset()         { *m = StreamdalListDestinationOptions{} }
func (m *StreamdalListDestinationOptions) String() string { return proto.CompactTextString(m) }
func (*StreamdalListDestinationOptions) ProtoMessage()    {}
func (*StreamdalListDestinationOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_49b11ca9129ce8de, []int{4}
}

func (m *StreamdalListDestinationOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamdalListDestinationOptions.Unmarshal(m, b)
}
func (m *StreamdalListDestinationOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamdalListDestinationOptions.Marshal(b, m, deterministic)
}
func (m *StreamdalListDestinationOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamdalListDestinationOptions.Merge(m, src)
}
func (m *StreamdalListDestinationOptions) XXX_Size() int {
	return xxx_messageInfo_StreamdalListDestinationOptions.Size(m)
}
func (m *StreamdalListDestinationOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamdalListDestinationOptions.DiscardUnknown(m)
}

var xxx_messageInfo_StreamdalListDestinationOptions proto.InternalMessageInfo

type StreamdalListSchemaOptions struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StreamdalListSchemaOptions) Reset()         { *m = StreamdalListSchemaOptions{} }
func (m *StreamdalListSchemaOptions) String() string { return proto.CompactTextString(m) }
func (*StreamdalListSchemaOptions) ProtoMessage()    {}
func (*StreamdalListSchemaOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_49b11ca9129ce8de, []int{5}
}

func (m *StreamdalListSchemaOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamdalListSchemaOptions.Unmarshal(m, b)
}
func (m *StreamdalListSchemaOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamdalListSchemaOptions.Marshal(b, m, deterministic)
}
func (m *StreamdalListSchemaOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamdalListSchemaOptions.Merge(m, src)
}
func (m *StreamdalListSchemaOptions) XXX_Size() int {
	return xxx_messageInfo_StreamdalListSchemaOptions.Size(m)
}
func (m *StreamdalListSchemaOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamdalListSchemaOptions.DiscardUnknown(m)
}

var xxx_messageInfo_StreamdalListSchemaOptions proto.InternalMessageInfo

type StreamdalListReplayOptions struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StreamdalListReplayOptions) Reset()         { *m = StreamdalListReplayOptions{} }
func (m *StreamdalListReplayOptions) String() string { return proto.CompactTextString(m) }
func (*StreamdalListReplayOptions) ProtoMessage()    {}
func (*StreamdalListReplayOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_49b11ca9129ce8de, []int{6}
}

func (m *StreamdalListReplayOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamdalListReplayOptions.Unmarshal(m, b)
}
func (m *StreamdalListReplayOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamdalListReplayOptions.Marshal(b, m, deterministic)
}
func (m *StreamdalListReplayOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamdalListReplayOptions.Merge(m, src)
}
func (m *StreamdalListReplayOptions) XXX_Size() int {
	return xxx_messageInfo_StreamdalListReplayOptions.Size(m)
}
func (m *StreamdalListReplayOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamdalListReplayOptions.DiscardUnknown(m)
}

var xxx_messageInfo_StreamdalListReplayOptions proto.InternalMessageInfo

type StreamdalArchiveOptions struct {
	// @gotags: kong:"embed,cmd,help='Archive a replay'"
	Replay               *StreamdalArchiveReplayOptions `protobuf:"bytes,1,opt,name=replay,proto3" json:"replay,omitempty" kong:"embed,cmd,help='Archive a replay'"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *StreamdalArchiveOptions) Reset()         { *m = StreamdalArchiveOptions{} }
func (m *StreamdalArchiveOptions) String() string { return proto.CompactTextString(m) }
func (*StreamdalArchiveOptions) ProtoMessage()    {}
func (*StreamdalArchiveOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_49b11ca9129ce8de, []int{7}
}

func (m *StreamdalArchiveOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamdalArchiveOptions.Unmarshal(m, b)
}
func (m *StreamdalArchiveOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamdalArchiveOptions.Marshal(b, m, deterministic)
}
func (m *StreamdalArchiveOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamdalArchiveOptions.Merge(m, src)
}
func (m *StreamdalArchiveOptions) XXX_Size() int {
	return xxx_messageInfo_StreamdalArchiveOptions.Size(m)
}
func (m *StreamdalArchiveOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamdalArchiveOptions.DiscardUnknown(m)
}

var xxx_messageInfo_StreamdalArchiveOptions proto.InternalMessageInfo

func (m *StreamdalArchiveOptions) GetReplay() *StreamdalArchiveReplayOptions {
	if m != nil {
		return m.Replay
	}
	return nil
}

type StreamdalArchiveReplayOptions struct {
	// @gotags: kong:"help='Replay ID to archive',required"
	ReplayId             string   `protobuf:"bytes,1,opt,name=replay_id,json=replayId,proto3" json:"replay_id,omitempty" kong:"help='Replay ID to archive',required"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StreamdalArchiveReplayOptions) Reset()         { *m = StreamdalArchiveReplayOptions{} }
func (m *StreamdalArchiveReplayOptions) String() string { return proto.CompactTextString(m) }
func (*StreamdalArchiveReplayOptions) ProtoMessage()    {}
func (*StreamdalArchiveReplayOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_49b11ca9129ce8de, []int{8}
}

func (m *StreamdalArchiveReplayOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamdalArchiveReplayOptions.Unmarshal(m, b)
}
func (m *StreamdalArchiveReplayOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamdalArchiveReplayOptions.Marshal(b, m, deterministic)
}
func (m *StreamdalArchiveReplayOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamdalArchiveReplayOptions.Merge(m, src)
}
func (m *StreamdalArchiveReplayOptions) XXX_Size() int {
	return xxx_messageInfo_StreamdalArchiveReplayOptions.Size(m)
}
func (m *StreamdalArchiveReplayOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamdalArchiveReplayOptions.DiscardUnknown(m)
}

var xxx_messageInfo_StreamdalArchiveReplayOptions proto.InternalMessageInfo

func (m *StreamdalArchiveReplayOptions) GetReplayId() string {
	if m != nil {
		return m.ReplayId
	}
	return ""
}

type StreamdalListOptions struct {
	// @gotags: kong:"cmd,help='List all collections'"
	Collection *StreamdalListCollectionOptions `protobuf:"bytes,1,opt,name=collection,proto3" json:"collection,omitempty" kong:"cmd,help='List all collections'"`
	// @gotags: kong:"cmd,help='List all destinations'"
	Destination *StreamdalListDestinationOptions `protobuf:"bytes,2,opt,name=destination,proto3" json:"destination,omitempty" kong:"cmd,help='List all destinations'"`
	// @gotags: kong:"cmd,help='List all replays'"
	Replay *StreamdalListReplayOptions `protobuf:"bytes,3,opt,name=replay,proto3" json:"replay,omitempty" kong:"cmd,help='List all replays'"`
	// @gotags: kong:"cmd,help='List all schemas'"
	Schema               *StreamdalListSchemaOptions `protobuf:"bytes,4,opt,name=schema,proto3" json:"schema,omitempty" kong:"cmd,help='List all schemas'"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *StreamdalListOptions) Reset()         { *m = StreamdalListOptions{} }
func (m *StreamdalListOptions) String() string { return proto.CompactTextString(m) }
func (*StreamdalListOptions) ProtoMessage()    {}
func (*StreamdalListOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_49b11ca9129ce8de, []int{9}
}

func (m *StreamdalListOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamdalListOptions.Unmarshal(m, b)
}
func (m *StreamdalListOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamdalListOptions.Marshal(b, m, deterministic)
}
func (m *StreamdalListOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamdalListOptions.Merge(m, src)
}
func (m *StreamdalListOptions) XXX_Size() int {
	return xxx_messageInfo_StreamdalListOptions.Size(m)
}
func (m *StreamdalListOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamdalListOptions.DiscardUnknown(m)
}

var xxx_messageInfo_StreamdalListOptions proto.InternalMessageInfo

func (m *StreamdalListOptions) GetCollection() *StreamdalListCollectionOptions {
	if m != nil {
		return m.Collection
	}
	return nil
}

func (m *StreamdalListOptions) GetDestination() *StreamdalListDestinationOptions {
	if m != nil {
		return m.Destination
	}
	return nil
}

func (m *StreamdalListOptions) GetReplay() *StreamdalListReplayOptions {
	if m != nil {
		return m.Replay
	}
	return nil
}

func (m *StreamdalListOptions) GetSchema() *StreamdalListSchemaOptions {
	if m != nil {
		return m.Schema
	}
	return nil
}

type StreamdalCreateOptions struct {
	// @gotags: kong:"cmd,help='Create a collection'"
	Collection *StreamdalCreateCollectionOptions `protobuf:"bytes,1,opt,name=collection,proto3" json:"collection,omitempty" kong:"cmd,help='Create a collection'"`
	// @gotags: kong:"cmd,help='Create a replay'"
	Replay *StreamdalCreateReplayOptions `protobuf:"bytes,2,opt,name=replay,proto3" json:"replay,omitempty" kong:"cmd,help='Create a replay'"`
	// @gotags: kong:"cmd,help='Create a destination'"
	Destination          *StreamdalCreateDestinationOptions `protobuf:"bytes,3,opt,name=destination,proto3" json:"destination,omitempty" kong:"cmd,help='Create a destination'"`
	XXX_NoUnkeyedLiteral struct{}                           `json:"-"`
	XXX_unrecognized     []byte                             `json:"-"`
	XXX_sizecache        int32                              `json:"-"`
}

func (m *StreamdalCreateOptions) Reset()         { *m = StreamdalCreateOptions{} }
func (m *StreamdalCreateOptions) String() string { return proto.CompactTextString(m) }
func (*StreamdalCreateOptions) ProtoMessage()    {}
func (*StreamdalCreateOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_49b11ca9129ce8de, []int{10}
}

func (m *StreamdalCreateOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamdalCreateOptions.Unmarshal(m, b)
}
func (m *StreamdalCreateOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamdalCreateOptions.Marshal(b, m, deterministic)
}
func (m *StreamdalCreateOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamdalCreateOptions.Merge(m, src)
}
func (m *StreamdalCreateOptions) XXX_Size() int {
	return xxx_messageInfo_StreamdalCreateOptions.Size(m)
}
func (m *StreamdalCreateOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamdalCreateOptions.DiscardUnknown(m)
}

var xxx_messageInfo_StreamdalCreateOptions proto.InternalMessageInfo

func (m *StreamdalCreateOptions) GetCollection() *StreamdalCreateCollectionOptions {
	if m != nil {
		return m.Collection
	}
	return nil
}

func (m *StreamdalCreateOptions) GetReplay() *StreamdalCreateReplayOptions {
	if m != nil {
		return m.Replay
	}
	return nil
}

func (m *StreamdalCreateOptions) GetDestination() *StreamdalCreateDestinationOptions {
	if m != nil {
		return m.Destination
	}
	return nil
}

type StreamdalSearchOptions struct {
	// @gotags: kong:"help='Query to perform',default='*'"
	Query string `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty" kong:"help='Query to perform',default='*'"`
	// @gotags: kong:"help='Collection id to query',required"
	CollectionId string `protobuf:"bytes,2,opt,name=collection_id,json=collectionId,proto3" json:"collection_id,omitempty" kong:"help='Collection id to query',required"`
	// @gotags: kong:"help='Which page to display',default=1"
	Page                 int32    `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty" kong:"help='Which page to display',default=1"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StreamdalSearchOptions) Reset()         { *m = StreamdalSearchOptions{} }
func (m *StreamdalSearchOptions) String() string { return proto.CompactTextString(m) }
func (*StreamdalSearchOptions) ProtoMessage()    {}
func (*StreamdalSearchOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_49b11ca9129ce8de, []int{11}
}

func (m *StreamdalSearchOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamdalSearchOptions.Unmarshal(m, b)
}
func (m *StreamdalSearchOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamdalSearchOptions.Marshal(b, m, deterministic)
}
func (m *StreamdalSearchOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamdalSearchOptions.Merge(m, src)
}
func (m *StreamdalSearchOptions) XXX_Size() int {
	return xxx_messageInfo_StreamdalSearchOptions.Size(m)
}
func (m *StreamdalSearchOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamdalSearchOptions.DiscardUnknown(m)
}

var xxx_messageInfo_StreamdalSearchOptions proto.InternalMessageInfo

func (m *StreamdalSearchOptions) GetQuery() string {
	if m != nil {
		return m.Query
	}
	return ""
}

func (m *StreamdalSearchOptions) GetCollectionId() string {
	if m != nil {
		return m.CollectionId
	}
	return ""
}

func (m *StreamdalSearchOptions) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

type StreamdalCreateCollectionOptions struct {
	// @gotags: kong:"help='Friendly name for the collection',required"
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty" kong:"help='Friendly name for the collection',required"`
	// @gotags: kong:"help='Schema the collection will use (can be obtained running _plumber streamdal list schema_)',required"
	SchemaId string `protobuf:"bytes,2,opt,name=schema_id,json=schemaId,proto3" json:"schema_id,omitempty" kong:"help='Schema the collection will use (can be obtained running _plumber streamdal list schema_)',required"`
	// @gotags: kong:"help='Optional notes for the collection'"
	Notes string `protobuf:"bytes,3,opt,name=notes,proto3" json:"notes,omitempty" kong:"help='Optional notes for the collection'"`
	// @gotags: kong:"help='(Protobuf Schemas Only) Envelope Type (deep or shallow)',default='deep'"
	EnvelopeType string `protobuf:"bytes,4,opt,name=envelope_type,json=envelopeType,proto3" json:"envelope_type,omitempty" kong:"help='(Protobuf Schemas Only) Envelope Type (deep or shallow)',default='deep'"`
	// @gotags: kong:"help='(Protobuf Schemas Only) Envelope Message Name (Ex: events.MessageEnvelope)'"
	EnvelopeRootMessage string `protobuf:"bytes,5,opt,name=envelope_root_message,json=envelopeRootMessage,proto3" json:"envelope_root_message,omitempty" kong:"help='(Protobuf Schemas Only) Envelope Message Name (Ex: events.MessageEnvelope)'"`
	// @gotags: kong:"help='(Shallow Envelope Protobuf Schemas Only) Payload Message Name (Ex: events.ShallowPayload)'"
	PayloadFieldMessage string `protobuf:"bytes,6,opt,name=payload_field_message,json=payloadFieldMessage,proto3" json:"payload_field_message,omitempty" kong:"help='(Shallow Envelope Protobuf Schemas Only) Payload Message Name (Ex: events.ShallowPayload)'"`
	// @gotags: kong:"help='(Shallow Envelope Protobuf Schemas Only) Field ID containing the message encoded with Payload Message'"
	PayloadFieldId       string   `protobuf:"bytes,7,opt,name=payload_field_id,json=payloadFieldId,proto3" json:"payload_field_id,omitempty" kong:"help='(Shallow Envelope Protobuf Schemas Only) Field ID containing the message encoded with Payload Message'"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StreamdalCreateCollectionOptions) Reset()         { *m = StreamdalCreateCollectionOptions{} }
func (m *StreamdalCreateCollectionOptions) String() string { return proto.CompactTextString(m) }
func (*StreamdalCreateCollectionOptions) ProtoMessage()    {}
func (*StreamdalCreateCollectionOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_49b11ca9129ce8de, []int{12}
}

func (m *StreamdalCreateCollectionOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamdalCreateCollectionOptions.Unmarshal(m, b)
}
func (m *StreamdalCreateCollectionOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamdalCreateCollectionOptions.Marshal(b, m, deterministic)
}
func (m *StreamdalCreateCollectionOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamdalCreateCollectionOptions.Merge(m, src)
}
func (m *StreamdalCreateCollectionOptions) XXX_Size() int {
	return xxx_messageInfo_StreamdalCreateCollectionOptions.Size(m)
}
func (m *StreamdalCreateCollectionOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamdalCreateCollectionOptions.DiscardUnknown(m)
}

var xxx_messageInfo_StreamdalCreateCollectionOptions proto.InternalMessageInfo

func (m *StreamdalCreateCollectionOptions) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *StreamdalCreateCollectionOptions) GetSchemaId() string {
	if m != nil {
		return m.SchemaId
	}
	return ""
}

func (m *StreamdalCreateCollectionOptions) GetNotes() string {
	if m != nil {
		return m.Notes
	}
	return ""
}

func (m *StreamdalCreateCollectionOptions) GetEnvelopeType() string {
	if m != nil {
		return m.EnvelopeType
	}
	return ""
}

func (m *StreamdalCreateCollectionOptions) GetEnvelopeRootMessage() string {
	if m != nil {
		return m.EnvelopeRootMessage
	}
	return ""
}

func (m *StreamdalCreateCollectionOptions) GetPayloadFieldMessage() string {
	if m != nil {
		return m.PayloadFieldMessage
	}
	return ""
}

func (m *StreamdalCreateCollectionOptions) GetPayloadFieldId() string {
	if m != nil {
		return m.PayloadFieldId
	}
	return ""
}

type StreamdalCreateReplayOptions struct {
	// @gotags: kong:"help='Friendly name to assign to the replay',required"
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty" kong:"help='Friendly name to assign to the replay',required"`
	// @gotags: kong:"help='One-time/single or continuous replay (options: single, continuous)',type=pbenum,pbenum_lowercase,default=single"
	Type StreamdalReplayType `protobuf:"varint,2,opt,name=type,proto3,enum=protos.opts.StreamdalReplayType" json:"type,omitempty" kong:"help='One-time/single or continuous replay (options: single, continuous)',type=pbenum,pbenum_lowercase,default=single"`
	// @gotags: kong:"help='Notes to attach to the replay'"
	Notes string `protobuf:"bytes,3,opt,name=notes,proto3" json:"notes,omitempty" kong:"help='Notes to attach to the replay'"`
	// @gotags: kong:"help='Collection ID to replay from',required"
	CollectionId string `protobuf:"bytes,4,opt,name=collection_id,json=collectionId,proto3" json:"collection_id,omitempty" kong:"help='Collection ID to replay from',required"`
	// @gotags: kong:"help='Destination ID to replay to',required"
	DestinationId string `protobuf:"bytes,5,opt,name=destination_id,json=destinationId,proto3" json:"destination_id,omitempty" kong:"help='Destination ID to replay to',required"`
	// @gotags: kong:"help='Search query',default='*'"
	Query string `protobuf:"bytes,6,opt,name=query,proto3" json:"query,omitempty" kong:"help='Search query',default='*'"`
	// @gotags: kong:"help='Where to begin search (RFC3339 timestamp)',required"
	FromTimestamp string `protobuf:"bytes,7,opt,name=from_timestamp,json=fromTimestamp,proto3" json:"from_timestamp,omitempty" kong:"help='Where to begin search (RFC3339 timestamp)',required"`
	// @gotags: kong:"help='Where to end search (RFC3339 timestamp)',required"
	ToTimestamp          string   `protobuf:"bytes,8,opt,name=to_timestamp,json=toTimestamp,proto3" json:"to_timestamp,omitempty" kong:"help='Where to end search (RFC3339 timestamp)',required"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StreamdalCreateReplayOptions) Reset()         { *m = StreamdalCreateReplayOptions{} }
func (m *StreamdalCreateReplayOptions) String() string { return proto.CompactTextString(m) }
func (*StreamdalCreateReplayOptions) ProtoMessage()    {}
func (*StreamdalCreateReplayOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_49b11ca9129ce8de, []int{13}
}

func (m *StreamdalCreateReplayOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamdalCreateReplayOptions.Unmarshal(m, b)
}
func (m *StreamdalCreateReplayOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamdalCreateReplayOptions.Marshal(b, m, deterministic)
}
func (m *StreamdalCreateReplayOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamdalCreateReplayOptions.Merge(m, src)
}
func (m *StreamdalCreateReplayOptions) XXX_Size() int {
	return xxx_messageInfo_StreamdalCreateReplayOptions.Size(m)
}
func (m *StreamdalCreateReplayOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamdalCreateReplayOptions.DiscardUnknown(m)
}

var xxx_messageInfo_StreamdalCreateReplayOptions proto.InternalMessageInfo

func (m *StreamdalCreateReplayOptions) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *StreamdalCreateReplayOptions) GetType() StreamdalReplayType {
	if m != nil {
		return m.Type
	}
	return StreamdalReplayType_SINGLE
}

func (m *StreamdalCreateReplayOptions) GetNotes() string {
	if m != nil {
		return m.Notes
	}
	return ""
}

func (m *StreamdalCreateReplayOptions) GetCollectionId() string {
	if m != nil {
		return m.CollectionId
	}
	return ""
}

func (m *StreamdalCreateReplayOptions) GetDestinationId() string {
	if m != nil {
		return m.DestinationId
	}
	return ""
}

func (m *StreamdalCreateReplayOptions) GetQuery() string {
	if m != nil {
		return m.Query
	}
	return ""
}

func (m *StreamdalCreateReplayOptions) GetFromTimestamp() string {
	if m != nil {
		return m.FromTimestamp
	}
	return ""
}

func (m *StreamdalCreateReplayOptions) GetToTimestamp() string {
	if m != nil {
		return m.ToTimestamp
	}
	return ""
}

type StreamdalCreateDestinationOptions struct {
	// @gotags: kong:"help='Friendly name to assign to the destination',required"
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty" kong:"help='Friendly name to assign to the destination',required"`
	// @gotags: kong:"help='Any notes to include with the destination'"
	Notes string `protobuf:"bytes,2,opt,name=notes,proto3" json:"notes,omitempty" kong:"help='Any notes to include with the destination'"`
	// Used internally by CLI
	// @gotags: kong:"-"
	XApiDestinationType string `protobuf:"bytes,1000,opt,name=_api_destination_type,json=ApiDestinationType,proto3" json:"_api_destination_type,omitempty" kong:"-"`
	// @gotags: kong:"cmd,help='Apache Kafka'"
	Kafka *WriteGroupKafkaOptions `protobuf:"bytes,100,opt,name=kafka,proto3" json:"kafka,omitempty" kong:"cmd,help='Apache Kafka'"`
	// @gotags: kong:"cmd,help='RabbitMQ'"
	Rabbit *WriteGroupRabbitOptions `protobuf:"bytes,101,opt,name=rabbit,proto3" json:"rabbit,omitempty" kong:"cmd,help='RabbitMQ'"`
	// @gotags: kong:"cmd,help='KubeMQ Queue'"
	KubemqQueue *WriteGroupKubeMQQueueOptions `protobuf:"bytes,102,opt,name=kubemq_queue,json=kubemqQueue,proto3" json:"kubemq_queue,omitempty" kong:"cmd,help='KubeMQ Queue'"`
	// @gotags: kong:"cmd,help='AWS Simple Queue System'"
	AwsSqs *WriteGroupAWSSQSOptions `protobuf:"bytes,103,opt,name=aws_sqs,json=awsSqs,proto3" json:"aws_sqs,omitempty" kong:"cmd,help='AWS Simple Queue System'"`
	// @gotags: kong:"cmd,help='HTTP Destination (POST)'"
	Http                 *HTTPDestination `protobuf:"bytes,104,opt,name=http,proto3" json:"http,omitempty" kong:"cmd,help='HTTP Destination (POST)'"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *StreamdalCreateDestinationOptions) Reset()         { *m = StreamdalCreateDestinationOptions{} }
func (m *StreamdalCreateDestinationOptions) String() string { return proto.CompactTextString(m) }
func (*StreamdalCreateDestinationOptions) ProtoMessage()    {}
func (*StreamdalCreateDestinationOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_49b11ca9129ce8de, []int{14}
}

func (m *StreamdalCreateDestinationOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamdalCreateDestinationOptions.Unmarshal(m, b)
}
func (m *StreamdalCreateDestinationOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamdalCreateDestinationOptions.Marshal(b, m, deterministic)
}
func (m *StreamdalCreateDestinationOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamdalCreateDestinationOptions.Merge(m, src)
}
func (m *StreamdalCreateDestinationOptions) XXX_Size() int {
	return xxx_messageInfo_StreamdalCreateDestinationOptions.Size(m)
}
func (m *StreamdalCreateDestinationOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamdalCreateDestinationOptions.DiscardUnknown(m)
}

var xxx_messageInfo_StreamdalCreateDestinationOptions proto.InternalMessageInfo

func (m *StreamdalCreateDestinationOptions) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *StreamdalCreateDestinationOptions) GetNotes() string {
	if m != nil {
		return m.Notes
	}
	return ""
}

func (m *StreamdalCreateDestinationOptions) GetXApiDestinationType() string {
	if m != nil {
		return m.XApiDestinationType
	}
	return ""
}

func (m *StreamdalCreateDestinationOptions) GetKafka() *WriteGroupKafkaOptions {
	if m != nil {
		return m.Kafka
	}
	return nil
}

func (m *StreamdalCreateDestinationOptions) GetRabbit() *WriteGroupRabbitOptions {
	if m != nil {
		return m.Rabbit
	}
	return nil
}

func (m *StreamdalCreateDestinationOptions) GetKubemqQueue() *WriteGroupKubeMQQueueOptions {
	if m != nil {
		return m.KubemqQueue
	}
	return nil
}

func (m *StreamdalCreateDestinationOptions) GetAwsSqs() *WriteGroupAWSSQSOptions {
	if m != nil {
		return m.AwsSqs
	}
	return nil
}

func (m *StreamdalCreateDestinationOptions) GetHttp() *HTTPDestination {
	if m != nil {
		return m.Http
	}
	return nil
}

type HTTPDestination struct {
	// @gotags: kong:"help='Full URL to HTTP server (ex: https://example.com/some/path)',required"
	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty" kong:"help='Full URL to HTTP server (ex: https://example.com/some/path)',required"`
	// @gotags: kong:"help='Optional map of headers to pass on replay (--headers key1=value1,key2=value2..)'"
	Headers              map[string]string `protobuf:"bytes,2,rep,name=headers,proto3" json:"headers,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3" kong:"help='Optional map of headers to pass on replay (--headers key1=value1,key2=value2..)'"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *HTTPDestination) Reset()         { *m = HTTPDestination{} }
func (m *HTTPDestination) String() string { return proto.CompactTextString(m) }
func (*HTTPDestination) ProtoMessage()    {}
func (*HTTPDestination) Descriptor() ([]byte, []int) {
	return fileDescriptor_49b11ca9129ce8de, []int{15}
}

func (m *HTTPDestination) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HTTPDestination.Unmarshal(m, b)
}
func (m *HTTPDestination) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HTTPDestination.Marshal(b, m, deterministic)
}
func (m *HTTPDestination) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HTTPDestination.Merge(m, src)
}
func (m *HTTPDestination) XXX_Size() int {
	return xxx_messageInfo_HTTPDestination.Size(m)
}
func (m *HTTPDestination) XXX_DiscardUnknown() {
	xxx_messageInfo_HTTPDestination.DiscardUnknown(m)
}

var xxx_messageInfo_HTTPDestination proto.InternalMessageInfo

func (m *HTTPDestination) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *HTTPDestination) GetHeaders() map[string]string {
	if m != nil {
		return m.Headers
	}
	return nil
}

func init() {
	proto.RegisterEnum("protos.opts.StreamdalOutputType", StreamdalOutputType_name, StreamdalOutputType_value)
	proto.RegisterEnum("protos.opts.StreamdalReplayType", StreamdalReplayType_name, StreamdalReplayType_value)
	proto.RegisterType((*StreamdalOptions)(nil), "protos.opts.StreamdalOptions")
	proto.RegisterType((*StreamdalLoginOptions)(nil), "protos.opts.StreamdalLoginOptions")
	proto.RegisterType((*StreamdalLogoutOptions)(nil), "protos.opts.StreamdalLogoutOptions")
	proto.RegisterType((*StreamdalListCollectionOptions)(nil), "protos.opts.StreamdalListCollectionOptions")
	proto.RegisterType((*StreamdalListDestinationOptions)(nil), "protos.opts.StreamdalListDestinationOptions")
	proto.RegisterType((*StreamdalListSchemaOptions)(nil), "protos.opts.StreamdalListSchemaOptions")
	proto.RegisterType((*StreamdalListReplayOptions)(nil), "protos.opts.StreamdalListReplayOptions")
	proto.RegisterType((*StreamdalArchiveOptions)(nil), "protos.opts.StreamdalArchiveOptions")
	proto.RegisterType((*StreamdalArchiveReplayOptions)(nil), "protos.opts.StreamdalArchiveReplayOptions")
	proto.RegisterType((*StreamdalListOptions)(nil), "protos.opts.StreamdalListOptions")
	proto.RegisterType((*StreamdalCreateOptions)(nil), "protos.opts.StreamdalCreateOptions")
	proto.RegisterType((*StreamdalSearchOptions)(nil), "protos.opts.StreamdalSearchOptions")
	proto.RegisterType((*StreamdalCreateCollectionOptions)(nil), "protos.opts.StreamdalCreateCollectionOptions")
	proto.RegisterType((*StreamdalCreateReplayOptions)(nil), "protos.opts.StreamdalCreateReplayOptions")
	proto.RegisterType((*StreamdalCreateDestinationOptions)(nil), "protos.opts.StreamdalCreateDestinationOptions")
	proto.RegisterType((*HTTPDestination)(nil), "protos.opts.HTTPDestination")
	proto.RegisterMapType((map[string]string)(nil), "protos.opts.HTTPDestination.HeadersEntry")
}

func init() { proto.RegisterFile("opts/ps_opts_streamdal.proto", fileDescriptor_49b11ca9129ce8de) }

var fileDescriptor_49b11ca9129ce8de = []byte{
	// 1070 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x56, 0xdd, 0x6e, 0xe3, 0x44,
	0x14, 0x26, 0x69, 0x92, 0x36, 0x27, 0x6d, 0x89, 0x66, 0xb7, 0xd4, 0x2a, 0x05, 0x52, 0x2f, 0x2b,
	0x4a, 0x61, 0x13, 0x08, 0x20, 0xed, 0x1f, 0xa0, 0xb4, 0x2c, 0xbb, 0x61, 0xfb, 0xb3, 0xb5, 0x53,
	0xad, 0x84, 0x84, 0xac, 0x49, 0x3c, 0x4d, 0xac, 0xda, 0x19, 0xc7, 0x33, 0x6e, 0x95, 0xb7, 0xe1,
	0x82, 0x2b, 0xee, 0xb9, 0xe0, 0x45, 0x78, 0x06, 0x1e, 0x82, 0x0b, 0x34, 0x33, 0xb6, 0x63, 0x6f,
	0x1d, 0xf7, 0xca, 0xf6, 0x9c, 0xef, 0x3b, 0x3f, 0xdf, 0x39, 0x33, 0x63, 0xd8, 0xa5, 0x3e, 0x67,
	0x1d, 0x9f, 0x59, 0xe2, 0x69, 0x31, 0x1e, 0x10, 0xec, 0xd9, 0xd8, 0x6d, 0xfb, 0x01, 0xe5, 0x14,
	0x35, 0xe4, 0x83, 0xb5, 0x85, 0x71, 0x47, 0xcb, 0x40, 0x6f, 0x02, 0x87, 0x13, 0x05, 0xd3, 0xff,
	0x59, 0x81, 0xa6, 0x19, 0x53, 0xcf, 0x7c, 0xee, 0xd0, 0x29, 0x43, 0x3d, 0x68, 0xd0, 0x90, 0xfb,
	0x21, 0xb7, 0xf8, 0xdc, 0x27, 0x5a, 0xa9, 0x55, 0xda, 0xdf, 0xec, 0xb6, 0xda, 0x29, 0x8f, 0xed,
	0x05, 0x47, 0x02, 0x07, 0x73, 0x9f, 0x18, 0x40, 0x93, 0x77, 0xb4, 0x0d, 0xab, 0xd8, 0x77, 0xac,
	0x30, 0x70, 0xb5, 0x72, 0xab, 0xb4, 0x5f, 0x37, 0x6a, 0xd8, 0x77, 0x2e, 0x02, 0x17, 0x3d, 0x86,
	0xaa, 0x4b, 0xc7, 0xce, 0x54, 0x5b, 0x69, 0x95, 0xf6, 0x1b, 0x5d, 0x3d, 0xdf, 0xeb, 0xb1, 0x80,
	0x44, 0xe9, 0x18, 0x8a, 0x80, 0x9e, 0x41, 0xcd, 0xa5, 0x63, 0x1a, 0x72, 0xad, 0x22, 0xa9, 0x0f,
	0x96, 0x52, 0x69, 0xc8, 0x63, 0x6e, 0x44, 0x41, 0xdf, 0x41, 0xc5, 0x75, 0x18, 0xd7, 0xaa, 0x92,
	0xba, 0xb7, 0x84, 0xea, 0xb0, 0x84, 0x28, 0xe1, 0x22, 0xe6, 0x28, 0x20, 0x98, 0x13, 0xad, 0x56,
	0x14, 0xf3, 0x48, 0x62, 0x92, 0x98, 0x8a, 0x22, 0xc8, 0x8c, 0xe0, 0x60, 0x34, 0xd1, 0x56, 0x8b,
	0xc8, 0xa6, 0xc4, 0x24, 0x64, 0x45, 0x41, 0x3f, 0xc0, 0xaa, 0x78, 0x3a, 0xd7, 0x44, 0x5b, 0x93,
	0xec, 0x4f, 0xf3, 0xd9, 0x3d, 0x05, 0x8a, 0xe9, 0x31, 0x49, 0xdf, 0x86, 0xad, 0x5c, 0x35, 0x75,
	0x0d, 0x3e, 0xc8, 0xd7, 0x4a, 0x6f, 0xc1, 0xc7, 0x19, 0x29, 0x8e, 0xa8, 0xeb, 0x92, 0x91, 0xb0,
	0xc5, 0x88, 0x3d, 0xf8, 0x24, 0x83, 0xf8, 0x89, 0x30, 0xee, 0x4c, 0x71, 0x1a, 0xb2, 0x0b, 0x3b,
	0x19, 0x88, 0x39, 0x9a, 0x10, 0x0f, 0x2f, 0xb3, 0x1a, 0xc4, 0x77, 0xf1, 0x3c, 0xb6, 0xfe, 0x06,
	0xdb, 0x4b, 0xea, 0x42, 0x87, 0x50, 0x0b, 0x24, 0x56, 0x4e, 0x63, 0xa3, 0x7b, 0x50, 0xa8, 0x46,
	0xc6, 0xad, 0x11, 0x31, 0xf5, 0xe7, 0xf0, 0x51, 0x21, 0x10, 0x7d, 0x08, 0x75, 0x05, 0xb5, 0x1c,
	0x5b, 0xc6, 0xa9, 0x1b, 0x6b, 0x6a, 0xa1, 0x6f, 0xeb, 0x7f, 0x95, 0xe1, 0x7e, 0xde, 0xa4, 0xa0,
	0xd7, 0x00, 0xa3, 0x44, 0xa9, 0x28, 0xbd, 0x2f, 0x96, 0x0f, 0xd8, 0x2d, 0x55, 0x8d, 0x14, 0x1d,
	0x9d, 0x42, 0xc3, 0x5e, 0x88, 0x2a, 0xf7, 0x4e, 0xa3, 0xfb, 0xe5, 0x72, 0x6f, 0xb7, 0x3b, 0x60,
	0xa4, 0x1d, 0xa0, 0x1f, 0x13, 0xdd, 0xd4, 0x7e, 0xfb, 0x6c, 0xb9, 0xab, 0x5c, 0xd1, 0x84, 0x03,
	0x26, 0x5b, 0x18, 0xed, 0xba, 0x02, 0x07, 0x99, 0x56, 0x1b, 0x11, 0x4d, 0xff, 0xaf, 0x94, 0x1a,
	0xb8, 0xcc, 0x46, 0x41, 0x27, 0x39, 0xca, 0x3d, 0x2a, 0xda, 0x61, 0xc5, 0xda, 0xf5, 0x92, 0x5a,
	0x95, 0x6c, 0x9f, 0x17, 0xb9, 0xca, 0xaf, 0xf6, 0x4d, 0x56, 0x7e, 0xa5, 0x59, 0xbb, 0xc8, 0xcf,
	0x1d, 0x0d, 0xd0, 0xc7, 0xa9, 0xea, 0x33, 0x3b, 0x1d, 0xdd, 0x87, 0xea, 0x2c, 0x24, 0xc1, 0x3c,
	0x9a, 0x34, 0xf5, 0x81, 0x1e, 0xc0, 0xc6, 0xa2, 0x24, 0x31, 0x87, 0xea, 0xf8, 0x5c, 0x5f, 0x2c,
	0xf6, 0x6d, 0x84, 0xa0, 0xe2, 0xe3, 0x31, 0x91, 0xf9, 0x55, 0x0d, 0xf9, 0xae, 0xff, 0x5e, 0x86,
	0xd6, 0x5d, 0x72, 0x09, 0xe2, 0x14, 0x7b, 0x24, 0x0a, 0x29, 0xdf, 0xc5, 0xd4, 0xab, 0x56, 0x2d,
	0xa2, 0xad, 0xa9, 0x85, 0xbe, 0x2d, 0x92, 0x9c, 0x52, 0x4e, 0x98, 0x0c, 0x55, 0x37, 0xd4, 0x87,
	0x48, 0x92, 0x4c, 0xaf, 0x89, 0x4b, 0x7d, 0xa2, 0xae, 0x88, 0x8a, 0x4a, 0x32, 0x5e, 0x94, 0x57,
	0x40, 0x17, 0xb6, 0x12, 0x50, 0x40, 0x29, 0xb7, 0x3c, 0xc2, 0x98, 0xc8, 0xba, 0x2a, 0xc1, 0xf7,
	0x62, 0xa3, 0x41, 0x29, 0x3f, 0x51, 0x26, 0xc1, 0xf1, 0xf1, 0xdc, 0xa5, 0xd8, 0xb6, 0x2e, 0x1d,
	0xe2, 0xda, 0x09, 0xa7, 0xa6, 0x38, 0x91, 0xf1, 0x67, 0x61, 0x8b, 0x39, 0xfb, 0xd0, 0xcc, 0x72,
	0x1c, 0x5b, 0x1e, 0xb8, 0x75, 0x63, 0x33, 0x0d, 0xef, 0xdb, 0xfa, 0x9f, 0x65, 0xd8, 0x2d, 0x1a,
	0x83, 0x5c, 0x79, 0xbe, 0x85, 0x8a, 0x2c, 0xb1, 0x5c, 0x74, 0x0b, 0x2a, 0x37, 0xf2, 0x16, 0x94,
	0xe8, 0xe5, 0xba, 0x65, 0x9b, 0x5b, 0xc9, 0x69, 0xee, 0x43, 0xd8, 0x4c, 0x0d, 0x90, 0x40, 0x29,
	0xc1, 0x36, 0x52, 0xab, 0xaa, 0x33, 0x6a, 0x7c, 0x6a, 0xe9, 0xf1, 0x79, 0x08, 0x9b, 0x97, 0x01,
	0xf5, 0x2c, 0xee, 0x78, 0x84, 0x71, 0xec, 0xf9, 0x91, 0x14, 0x1b, 0x62, 0x75, 0x10, 0x2f, 0xa2,
	0x3d, 0x58, 0xe7, 0x34, 0x05, 0x5a, 0x93, 0xa0, 0x06, 0xa7, 0x09, 0x44, 0xff, 0x7b, 0x05, 0xf6,
	0xee, 0x9c, 0xf5, 0x5c, 0xc5, 0x92, 0xda, 0xcb, 0xe9, 0xda, 0xbb, 0xb0, 0x65, 0x89, 0x5f, 0x82,
	0x74, 0x6d, 0x52, 0xd8, 0x7f, 0x55, 0x86, 0xa8, 0xe7, 0x3b, 0xa9, 0x00, 0x72, 0x84, 0x9e, 0x40,
	0xf5, 0x0a, 0x5f, 0x5e, 0x61, 0xcd, 0xce, 0xb9, 0x40, 0xdf, 0x8a, 0xdf, 0x98, 0x97, 0x01, 0x0d,
	0xfd, 0xd7, 0x02, 0x93, 0xfc, 0x2d, 0x48, 0x06, 0x7a, 0x0e, 0xb5, 0x00, 0x0f, 0x87, 0x0e, 0xd7,
	0x48, 0xce, 0xf5, 0xb9, 0xe0, 0x1a, 0x12, 0xb4, 0x38, 0x07, 0xe4, 0x27, 0x3a, 0x86, 0xf5, 0xab,
	0x70, 0x48, 0xbc, 0x99, 0x35, 0x0b, 0x49, 0x48, 0xb4, 0xcb, 0x9c, 0x03, 0x25, 0x15, 0x3f, 0x1c,
	0x92, 0x93, 0xf3, 0x73, 0x81, 0x4c, 0xce, 0x00, 0x45, 0x97, 0x6b, 0xe8, 0x7b, 0x58, 0xc5, 0x37,
	0xcc, 0x62, 0x33, 0xa6, 0x8d, 0x0b, 0x93, 0xe9, 0xbd, 0x35, 0xcd, 0x73, 0x33, 0x49, 0x06, 0xdf,
	0x30, 0x73, 0xc6, 0xd0, 0x57, 0x50, 0x99, 0x70, 0xee, 0x6b, 0x13, 0xc9, 0xdd, 0xcd, 0x70, 0x5f,
	0x0d, 0x06, 0x6f, 0x52, 0xaa, 0x19, 0x12, 0xa9, 0xff, 0x51, 0x82, 0xf7, 0xdf, 0xb1, 0xa0, 0x26,
	0xac, 0x88, 0xbf, 0x31, 0xd5, 0x28, 0xf1, 0x8a, 0x8e, 0x60, 0x75, 0x42, 0xb0, 0x4d, 0x02, 0xd1,
	0xa9, 0x95, 0x5b, 0xf5, 0xbd, 0xe3, 0xa0, 0xfd, 0x4a, 0x61, 0x5f, 0x4c, 0x79, 0x30, 0x37, 0x62,
	0xe6, 0xce, 0x53, 0x58, 0x4f, 0x1b, 0x44, 0x98, 0x2b, 0x12, 0x9f, 0x69, 0xe2, 0x55, 0x8c, 0xc3,
	0x35, 0x76, 0x43, 0x12, 0x8f, 0x83, 0xfc, 0x78, 0x5a, 0x7e, 0x5c, 0x3a, 0x38, 0x80, 0x7b, 0x39,
	0xff, 0x91, 0xa8, 0x0e, 0xd5, 0x41, 0xef, 0xf0, 0xf8, 0x45, 0xf3, 0x3d, 0xb4, 0x06, 0x95, 0x5f,
	0xcc, 0xb3, 0xd3, 0x66, 0xe9, 0xe0, 0xeb, 0x14, 0x76, 0xb1, 0xdb, 0x10, 0x40, 0xcd, 0xec, 0x9f,
	0xbe, 0x94, 0xe0, 0x4d, 0x80, 0xa3, 0xb3, 0xd3, 0x41, 0xff, 0xf4, 0xe2, 0xec, 0xc2, 0x6c, 0x96,
	0x0e, 0x9f, 0xfd, 0xfa, 0x64, 0xec, 0xf0, 0x49, 0x38, 0x6c, 0x8f, 0xa8, 0xd7, 0x19, 0x62, 0x3e,
	0x9a, 0x8c, 0x68, 0xe0, 0x77, 0x7c, 0x37, 0xf4, 0x86, 0x24, 0x78, 0xa4, 0x0e, 0x39, 0xd6, 0x19,
	0x86, 0x8e, 0x6b, 0x77, 0xc6, 0xb4, 0xa3, 0xaa, 0xef, 0x88, 0xea, 0x87, 0x35, 0xf9, 0xf1, 0xcd,
	0xff, 0x01, 0x00, 0x00, 0xff, 0xff, 0x39, 0xcd, 0xbf, 0x54, 0x66, 0x0b, 0x00, 0x00,
}
